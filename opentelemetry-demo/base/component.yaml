---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-adservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-adservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: adservice
    app.kubernetes.io/name: otel-demo-adservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-adservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-cartservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-cartservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: cartservice
    app.kubernetes.io/name: otel-demo-cartservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-cartservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-checkoutservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-checkoutservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: checkoutservice
    app.kubernetes.io/name: otel-demo-checkoutservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-checkoutservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-currencyservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-currencyservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: currencyservice
    app.kubernetes.io/name: otel-demo-currencyservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-currencyservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-emailservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-emailservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: emailservice
    app.kubernetes.io/name: otel-demo-emailservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-emailservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-flagd
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-flagd
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: flagd
    app.kubernetes.io/name: otel-demo-flagd
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8013
      name: tcp-service
      targetPort: 8013
    - port: 4000
      name: tcp-service-0
      targetPort: 4000
  selector:
    
    opentelemetry.io/name: otel-demo-flagd
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-frontend
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-frontend
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: frontend
    app.kubernetes.io/name: otel-demo-frontend
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-frontend
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-frontendproxy
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-frontendproxy
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: frontendproxy
    app.kubernetes.io/name: otel-demo-frontendproxy
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-frontendproxy
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-imageprovider
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-imageprovider
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: imageprovider
    app.kubernetes.io/name: otel-demo-imageprovider
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8081
      name: tcp-service
      targetPort: 8081
  selector:
    
    opentelemetry.io/name: otel-demo-imageprovider
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-kafka
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-kafka
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: kafka
    app.kubernetes.io/name: otel-demo-kafka
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 9092
      name: plaintext
      targetPort: 9092
    - port: 9093
      name: controller
      targetPort: 9093
  selector:
    
    opentelemetry.io/name: otel-demo-kafka
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-paymentservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-paymentservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: paymentservice
    app.kubernetes.io/name: otel-demo-paymentservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-paymentservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-productcatalogservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-productcatalogservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: productcatalogservice
    app.kubernetes.io/name: otel-demo-productcatalogservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-productcatalogservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-quoteservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-quoteservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: quoteservice
    app.kubernetes.io/name: otel-demo-quoteservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-quoteservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-recommendationservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-recommendationservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: recommendationservice
    app.kubernetes.io/name: otel-demo-recommendationservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-recommendationservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-shippingservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-shippingservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: shippingservice
    app.kubernetes.io/name: otel-demo-shippingservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: tcp-service
      targetPort: 8080
  selector:
    
    opentelemetry.io/name: otel-demo-shippingservice
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: v1
kind: Service
metadata:
  name: otel-demo-valkey
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-valkey
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: valkey
    app.kubernetes.io/name: otel-demo-valkey
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 6379
      name: valkey
      targetPort: 6379
  selector:
    
    opentelemetry.io/name: otel-demo-valkey
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-accountingservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-accountingservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: accountingservice
    app.kubernetes.io/name: otel-demo-accountingservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-accountingservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-accountingservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: accountingservice
        app.kubernetes.io/name: otel-demo-accountingservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: accountingservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-accountingservice'
          imagePullPolicy: IfNotPresent
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: KAFKA_SERVICE_ADDR
              value: 'otel-demo-kafka:9092'
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 120Mi
          volumeMounts:
      initContainers:
        - command:
          - sh
          - -c
          - until nc -z -v -w30 otel-demo-kafka 9092; do echo waiting
            for kafka; sleep 2; done;
          image: busybox:latest
          name: wait-for-kafka
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-adservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-adservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: adservice
    app.kubernetes.io/name: otel-demo-adservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-adservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-adservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: adservice
        app.kubernetes.io/name: otel-demo-adservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: adservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-adservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: AD_SERVICE_PORT
              value: "8080"
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318
            - name: OTEL_LOGS_EXPORTER
              value: otlp
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 300Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-cartservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-cartservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: cartservice
    app.kubernetes.io/name: otel-demo-cartservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-cartservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-cartservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: cartservice
        app.kubernetes.io/name: otel-demo-cartservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: cartservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-cartservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: CART_SERVICE_PORT
              value: "8080"
            - name: ASPNETCORE_URLS
              value: http://*:$(CART_SERVICE_PORT)
            - name: VALKEY_ADDR
              value: 'otel-demo-valkey:6379'
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 160Mi
          volumeMounts:
      initContainers:
        - command:
          - sh
          - -c
          - until nc -z -v -w30 otel-demo-valkey 6379; do echo waiting
            for valkey; sleep 2; done;
          image: busybox:latest
          name: wait-for-valkey
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-checkoutservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-checkoutservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: checkoutservice
    app.kubernetes.io/name: otel-demo-checkoutservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-checkoutservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-checkoutservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: checkoutservice
        app.kubernetes.io/name: otel-demo-checkoutservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: checkoutservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-checkoutservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: CHECKOUT_SERVICE_PORT
              value: "8080"
            - name: CART_SERVICE_ADDR
              value: 'otel-demo-cartservice:8080'
            - name: CURRENCY_SERVICE_ADDR
              value: 'otel-demo-currencyservice:8080'
            - name: EMAIL_SERVICE_ADDR
              value: http://otel-demo-emailservice:8080
            - name: PAYMENT_SERVICE_ADDR
              value: 'otel-demo-paymentservice:8080'
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: 'otel-demo-productcatalogservice:8080'
            - name: SHIPPING_SERVICE_ADDR
              value: 'otel-demo-shippingservice:8080'
            - name: KAFKA_SERVICE_ADDR
              value: 'otel-demo-kafka:9092'
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 20Mi
          volumeMounts:
      initContainers:
        - command:
          - sh
          - -c
          - until nc -z -v -w30 otel-demo-kafka 9092; do echo waiting
            for kafka; sleep 2; done;
          image: busybox:latest
          name: wait-for-kafka
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-currencyservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-currencyservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: currencyservice
    app.kubernetes.io/name: otel-demo-currencyservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-currencyservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-currencyservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: currencyservice
        app.kubernetes.io/name: otel-demo-currencyservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: currencyservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-currencyservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: CURRENCY_SERVICE_PORT
              value: "8080"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: VERSION
              value: '1.12.0'
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 20Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-emailservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-emailservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: emailservice
    app.kubernetes.io/name: otel-demo-emailservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-emailservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-emailservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: emailservice
        app.kubernetes.io/name: otel-demo-emailservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: emailservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-emailservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: EMAIL_SERVICE_PORT
              value: "8080"
            - name: APP_ENV
              value: production
            - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318/v1/traces
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 100Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-flagd
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-flagd
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: flagd
    app.kubernetes.io/name: otel-demo-flagd
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-flagd
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-flagd
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: flagd
        app.kubernetes.io/name: otel-demo-flagd
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: flagd
          image: 'ghcr.io/open-feature/flagd:v0.11.1'
          imagePullPolicy: IfNotPresent
          command:
            - /flagd-build
            - start
            - --uri
            - file:./etc/flagd/demo.flagd.json
          ports:
            
            - containerPort: 8013
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: FLAGD_METRICS_EXPORTER
              value: otel
            - name: FLAGD_OTEL_COLLECTOR_URI
              value: $(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 75Mi
          volumeMounts:
            - name: config-rw
              mountPath: /etc/flagd
        - name: flagdui
          image: 'ghcr.io/open-telemetry/demo:1.12.0-flagdui'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 4000
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: FLAGD_METRICS_EXPORTER
              value: otel
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 75Mi
          volumeMounts:
            - mountPath: /app/data
              name: config-rw
      initContainers:
        - command:
          - sh
          - -c
          - cp /config-ro/demo.flagd.json /config-rw/demo.flagd.json && cat /config-rw/demo.flagd.json
          image: busybox
          name: init-config
          volumeMounts:
          - mountPath: /config-ro
            name: config-ro
          - mountPath: /config-rw
            name: config-rw
      volumes:
        - name: config-rw
          emptyDir: {}
        - configMap:
            name: 'otel-demo-flagd-config'
          name: config-ro
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-frauddetectionservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-frauddetectionservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: frauddetectionservice
    app.kubernetes.io/name: otel-demo-frauddetectionservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-frauddetectionservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-frauddetectionservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: frauddetectionservice
        app.kubernetes.io/name: otel-demo-frauddetectionservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: frauddetectionservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-frauddetectionservice'
          imagePullPolicy: IfNotPresent
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: KAFKA_SERVICE_ADDR
              value: 'otel-demo-kafka:9092'
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 300Mi
          volumeMounts:
      initContainers:
        - command:
          - sh
          - -c
          - until nc -z -v -w30 otel-demo-kafka 9092; do echo waiting
            for kafka; sleep 2; done;
          image: busybox:latest
          name: wait-for-kafka
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-frontend
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-frontend
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: frontend
    app.kubernetes.io/name: otel-demo-frontend
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-frontend
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-frontend
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: frontend
        app.kubernetes.io/name: otel-demo-frontend
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: frontend
          image: 'ghcr.io/open-telemetry/demo:1.12.0-frontend'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: FRONTEND_PORT
              value: "8080"
            - name: FRONTEND_ADDR
              value: :8080
            - name: AD_SERVICE_ADDR
              value: 'otel-demo-adservice:8080'
            - name: CART_SERVICE_ADDR
              value: 'otel-demo-cartservice:8080'
            - name: CHECKOUT_SERVICE_ADDR
              value: 'otel-demo-checkoutservice:8080'
            - name: CURRENCY_SERVICE_ADDR
              value: 'otel-demo-currencyservice:8080'
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: 'otel-demo-productcatalogservice:8080'
            - name: RECOMMENDATION_SERVICE_ADDR
              value: 'otel-demo-recommendationservice:8080'
            - name: SHIPPING_SERVICE_ADDR
              value: 'otel-demo-shippingservice:8080'
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_COLLECTOR_HOST
              value: $(OTEL_COLLECTOR_NAME)
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: WEB_OTEL_SERVICE_NAME
              value: frontend-web
            - name: PUBLIC_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
              value: http://localhost:8080/otlp-http/v1/traces
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 250Mi
          securityContext:
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-frontendproxy
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-frontendproxy
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: frontendproxy
    app.kubernetes.io/name: otel-demo-frontendproxy
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-frontendproxy
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-frontendproxy
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: frontendproxy
        app.kubernetes.io/name: otel-demo-frontendproxy
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: frontendproxy
          image: 'ghcr.io/open-telemetry/demo:1.12.0-frontendproxy'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: ENVOY_PORT
              value: "8080"
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: FLAGD_UI_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_UI_PORT
              value: "4000"
            - name: FRONTEND_HOST
              value: 'otel-demo-frontend'
            - name: FRONTEND_PORT
              value: "8080"
            - name: GRAFANA_SERVICE_HOST
              value: 'otel-demo-grafana'
            - name: GRAFANA_SERVICE_PORT
              value: "80"
            - name: IMAGE_PROVIDER_HOST
              value: 'otel-demo-imageprovider'
            - name: IMAGE_PROVIDER_PORT
              value: "8081"
            - name: JAEGER_SERVICE_HOST
              value: 'otel-demo-jaeger-query'
            - name: JAEGER_SERVICE_PORT
              value: "16686"
            - name: LOCUST_WEB_HOST
              value: 'otel-demo-loadgenerator'
            - name: LOCUST_WEB_PORT
              value: "8089"
            - name: OTEL_COLLECTOR_HOST
              value: $(OTEL_COLLECTOR_NAME)
            - name: OTEL_COLLECTOR_PORT_GRPC
              value: "4317"
            - name: OTEL_COLLECTOR_PORT_HTTP
              value: "4318"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 50Mi
          securityContext:
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-imageprovider
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-imageprovider
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: imageprovider
    app.kubernetes.io/name: otel-demo-imageprovider
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-imageprovider
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-imageprovider
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: imageprovider
        app.kubernetes.io/name: otel-demo-imageprovider
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: imageprovider
          image: 'ghcr.io/open-telemetry/demo:1.12.0-imageprovider'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8081
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: IMAGE_PROVIDER_PORT
              value: "8081"
            - name: OTEL_COLLECTOR_PORT_GRPC
              value: "4317"
            - name: OTEL_COLLECTOR_HOST
              value: $(OTEL_COLLECTOR_NAME)
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 50Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-kafka
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-kafka
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: kafka
    app.kubernetes.io/name: otel-demo-kafka
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-kafka
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-kafka
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: kafka
        app.kubernetes.io/name: otel-demo-kafka
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: kafka
          image: 'ghcr.io/open-telemetry/demo:1.12.0-kafka'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 9092
              name: plaintext
            - containerPort: 9093
              name: controller
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://otel-demo-kafka:9092
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318
            - name: KAFKA_HEAP_OPTS
              value: -Xmx400M -Xms400M
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 600Mi
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-paymentservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-paymentservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: paymentservice
    app.kubernetes.io/name: otel-demo-paymentservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-paymentservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-paymentservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: paymentservice
        app.kubernetes.io/name: otel-demo-paymentservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: paymentservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-paymentservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: PAYMENT_SERVICE_PORT
              value: "8080"
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 120Mi
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-productcatalogservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-productcatalogservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: productcatalogservice
    app.kubernetes.io/name: otel-demo-productcatalogservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-productcatalogservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-productcatalogservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: productcatalogservice
        app.kubernetes.io/name: otel-demo-productcatalogservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: productcatalogservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-productcatalogservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: PRODUCT_CATALOG_SERVICE_PORT
              value: "8080"
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 20Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-quoteservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-quoteservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: quoteservice
    app.kubernetes.io/name: otel-demo-quoteservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-quoteservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-quoteservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: quoteservice
        app.kubernetes.io/name: otel-demo-quoteservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: quoteservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-quoteservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: QUOTE_SERVICE_PORT
              value: "8080"
            - name: OTEL_PHP_AUTOLOAD_ENABLED
              value: "true"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4318
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 40Mi
          securityContext:
            runAsGroup: 33
            runAsNonRoot: true
            runAsUser: 33
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-recommendationservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-recommendationservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: recommendationservice
    app.kubernetes.io/name: otel-demo-recommendationservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-recommendationservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-recommendationservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: recommendationservice
        app.kubernetes.io/name: otel-demo-recommendationservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: recommendationservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-recommendationservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: RECOMMENDATION_SERVICE_PORT
              value: "8080"
            - name: PRODUCT_CATALOG_SERVICE_ADDR
              value: 'otel-demo-productcatalogservice:8080'
            - name: OTEL_PYTHON_LOG_CORRELATION
              value: "true"
            - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
              value: python
            - name: FLAGD_HOST
              value: 'otel-demo-flagd'
            - name: FLAGD_PORT
              value: "8013"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 500Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-shippingservice
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-shippingservice
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: shippingservice
    app.kubernetes.io/name: otel-demo-shippingservice
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-shippingservice
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-shippingservice
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: shippingservice
        app.kubernetes.io/name: otel-demo-shippingservice
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: shippingservice
          image: 'ghcr.io/open-telemetry/demo:1.12.0-shippingservice'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 8080
              name: service
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: SHIPPING_SERVICE_PORT
              value: "8080"
            - name: QUOTE_SERVICE_ADDR
              value: http://otel-demo-quoteservice:8080
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://$(OTEL_COLLECTOR_NAME):4317
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 20Mi
          volumeMounts:
      volumes:
---
# Source: opentelemetry-demo/templates/component.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-valkey
  labels:
    helm.sh/chart: opentelemetry-demo-0.33.8
    
    opentelemetry.io/name: otel-demo-valkey
    app.kubernetes.io/instance: otel-demo
    app.kubernetes.io/component: valkey
    app.kubernetes.io/name: otel-demo-valkey
    app.kubernetes.io/version: "1.12.0"
    app.kubernetes.io/part-of: opentelemetry-demo
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      
      opentelemetry.io/name: otel-demo-valkey
  template:
    metadata:
      labels:
        
        opentelemetry.io/name: otel-demo-valkey
        app.kubernetes.io/instance: otel-demo
        app.kubernetes.io/component: valkey
        app.kubernetes.io/name: otel-demo-valkey
    spec:
      serviceAccountName: otel-demo
      containers:
        - name: valkey
          image: 'valkey/valkey:7.2-alpine'
          imagePullPolicy: IfNotPresent
          ports:
            
            - containerPort: 6379
              name: valkey
          env:
            - name: OTEL_SERVICE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/component']
            - name: OTEL_COLLECTOR_NAME
              value: alloy.collector
            - name: OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
              value: cumulative
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0
          resources:
            limits:
              memory: 20Mi
          securityContext:
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 999
          volumeMounts:
      volumes:
